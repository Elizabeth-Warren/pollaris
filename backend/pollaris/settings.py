"""
Django settings for pollaris project.

Generated by 'django-admin startproject' using Django 2.2.6.

For more information on this file, see
https://docs.djangoproject.com/en/2.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.2/ref/settings/
"""

import os

from ew_common.get_env_variables import get_env_var

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
SECRET_KEY = get_env_var("DJANGO_SECRET_KEY")
DEBUG = bool(get_env_var("DJANGO_DEBUG", optional=True, default=False))
ALLOWED_HOSTS = ["*"]

INSTALLED_APPS = ["pollaris.app", "corsheaders", "django.contrib.contenttypes"]

CORS_ORIGIN_REGEX_WHITELIST = []

MIDDLEWARE = [
    "corsheaders.middleware.CorsMiddleware",
    "django.middleware.security.SecurityMiddleware",
    "django.middleware.common.CommonMiddleware"
]

ROOT_URLCONF = "pollaris.urls"

WSGI_APPLICATION = "pollaris.wsgi.application"

DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.postgresql",
        "NAME": get_env_var("POSTGRES_DB", optional=True, default="pollaris"),
        "USER": get_env_var("POSTGRES_USER"),
        "PASSWORD": get_env_var("POSTGRES_PASSWORD"),
        "HOST": get_env_var("POSTGRES_HOST"),
        "PORT": int(get_env_var("POSTGRES_PORT", optional=True, default="5432")),
    }
}

LOGGING = {
    "version": 1,
    "disable_existing_loggers": False,
    "handlers": {"console": {"class": "logging.StreamHandler"}},
    "loggers": {
        "django": {
            "handlers": ["console"],
            "level": os.getenv("DJANGO_LOG_LEVEL", "INFO"),
        }
    },
}

# Internationalization
# https://docs.djangoproject.com/en/2.2/topics/i18n/
LANGUAGE_CODE = "en-us"
TIME_ZONE = "UTC"
USE_I18N = True
USE_L10N = True
USE_TZ = True

# Credentials for services we interact with
# Wrap in try/except so people can try running the service without AWS credentials or other keys.
# For real use, remove the try/except.
try:
    MOBILE_COMMONS_USERNAME = get_env_var("MOBILE_COMMONS_USERNAME", optional=True)
    MOBILE_COMMONS_PASSWORD = get_env_var("MOBILE_COMMONS_PASSWORD", optional=True)
    SMARTYSTREETS_AUTH_ID = get_env_var("SMARTYSTREETS_AUTH_ID", optional=True)
    SMARTYSTREETS_AUTH_TOKEN = get_env_var("SMARTYSTREETS_AUTH_TOKEN", optional=True)
    GOOGLE_MAPS_API_KEY = get_env_var("GOOGLE_MAPS_API_KEY")
except:
    print("Could not load credentials. Some functionality will not work.")
    MOBILE_COMMONS_USERNAME = None
    MOBILE_COMMONS_PASSWORD = None
    SMARTYSTREETS_AUTH_ID = None
    SMARTYSTREETS_AUTH_TOKEN = None
    GOOGLE_MAPS_API_KEY = None

